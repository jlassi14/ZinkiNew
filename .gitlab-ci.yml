# Define the stages for the pipeline
stages:
  - build-backend
  - deploy

# Define the jobs for each stage
build-backend:
  stage: build-backend
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker build -t jlassi14/backend1:$CI_COMMIT_SHORT_SHA -f backend/Dockerfile.dev ./backend
    - if [ $? -eq 0 ]; then echo "Docker build succeeded"; else echo "Docker build failed"; fi
    - echo "CI_REGISTRY_USER: $CI_REGISTRY_USER"
    - echo "CI_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "CI_REGISTRY_PASSWORD"
    - docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY_PASSWORD docker.io 
    - docker push jlassi14/backend1:$CI_COMMIT_SHORT_SHA
    - if [ $? -eq 0 ]; then echo "Docker push succeeded"; else echo "Docker push failed"; fi


deploy:
  stage: deploy
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
  script:
    - docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull jlassi14/backend1:$CI_COMMIT_SHORT_SHA
    - docker run -d --name backend -p 5000:5000 -e NODE_ENV=production jlassi14/backend1:$CI_COMMIT_SHORT_SHA
